"""Adding Email Table

Revision ID: 5fe4dcfcfbc1
Revises: 6b617b0dadae
Create Date: 2025-04-06 11:49:52.091337

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5fe4dcfcfbc1'
down_revision: Union[str, None] = '6b617b0dadae'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emails',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('body_preview', sa.Text(), nullable=True),
    sa.Column('body_plain', sa.Text(), nullable=True),
    sa.Column('body_html', sa.Text(), nullable=True),
    sa.Column('sender', sa.String(), nullable=True),
    sa.Column('recipients', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('cc', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('conversation_id', sa.String(), nullable=True),
    sa.Column('thread_subject', sa.String(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=True),
    sa.Column('synced_at', sa.DateTime(), nullable=True),
    sa.Column('is_fully_synced', sa.Boolean(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('quick_replies', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('ai_draft', sa.Text(), nullable=True),
    sa.Column('priority_score', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('topic', sa.String(), nullable=True),
    sa.Column('extracted_tasks', sa.JSON(), nullable=True),
    sa.Column('fulltext_vector', postgresql.TSVECTOR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emails_conversation_id'), 'emails', ['conversation_id'], unique=False)
    op.create_index('ix_emails_fulltext_vector', 'emails', ['fulltext_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_emails_user_id'), 'emails', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_emails_user_id'), table_name='emails')
    op.drop_index('ix_emails_fulltext_vector', table_name='emails', postgresql_using='gin')
    op.drop_index(op.f('ix_emails_conversation_id'), table_name='emails')
    op.drop_table('emails')
    # ### end Alembic commands ###
